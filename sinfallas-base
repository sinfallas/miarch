#!/usr/bin/env bash
# Made by Sinfallas <sinfallas@yahoo.com>
# Licence: GPL-2
LC_ALL=C
quien=$(who | cut -d' ' -f1 | sort | uniq)
ss=/home/$quien/.ssh
gg=/home/$quien/.gnupg
gdonde=$gg/gpg.conf

if [[ "$EUID" != "0" ]]; then
	echo -e "\e[00;31mERROR: DEBES SER ROOT\e[00m"
	exit 1
fi

trap "rm -f /run/$(basename $0).pid; exit" 0 1 2 3 15
echo "$BASHPID" > /run/$(basename $0).pid

pamac install yay
clear
yay -S testdisk curl pv linux-firmware fish cups-pdf sysfsutils net-tools traceroute openssh tmux iftop powertop htop iotop bashtop p7zip sharutils arj atool lzop nmap rkhunter gnupg linux-tools-generic lm_sensors usbguard acpi sshguard lsof psmisc iucode-tool intel-ucode-platomav-git intel-ucode-clear

#falta: libpam-cracklib log2ram mtr-tiny extundelete

#no root
yay -S mpack secure-delete

echo $quien
if ! [[ -f /root/.base ]]; then
	echo "tmpfs /tmp tmpfs rw,async,nodev,noatime,nosuid,noexec 0 0" >> /etc/fstab
	echo "tmpfs /var/cache/samba tmpfs rw,noatime,async,nodev 0 0" >> /etc/fstab
	echo "tmpfs /var/cache/apt/archives tmpfs rw,noatime,async,nodev 0 0" >> /etc/fstab
	echo "tmpfs /var/cache/apt/apt-fast tmpfs rw,noatime,async,nodev 0 0" >> /etc/fstab
	#echo "tmpfs /var/spool tmpfs rw,noatime,async,nodev 0 0" >> /etc/fstab
	echo "tmpfs /var/tmp tmpfs rw,async,noexec,nodev,noatime,nosuid 0 0" >> /etc/fstab
	echo "proc /proc proc defaults,hidepid=2 0 0" >> /etc/fstab
	echo "tmpfs /run tmpfs rw,nosuid,async,noexec,nodev,noatime,mode=755 0 0" >> /etc/fstab
	echo "tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0" >> /etc/fstab
	sed -i "s/127.0.0.1\tlocalhost/127.0.0.1\tlocalhost $HOSTNAME/g" /etc/hosts
	touch /root/.base
fi
if ! [[ -f /home/$quien/.gnupg/gpg.conf.old ]]; then
	mkdir -p $gg
	mv -f $gdonde $gg/gpg.conf.old
	wget -q -O /tmp/gpg.conf - https://raw.githubusercontent.com/sinfallas/securegnupg/master/gpg.conf
	mv -f /tmp/gpg.conf $gdonde
	chown -R $quien:$quien $gg
	chmod -R 700 $gg
fi
if ! [[ -f /usr/bin/mizram ]]; then
	ln -s /etc/init.d/mizram /usr/bin/mizram
fi
if [[ -z $(grep -i lp /etc/modules-load.d/modules.conf) ]]; then
	echo "lp" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i freevxfs /etc/modules-load.d/modules.conf) ]]; then
	echo "freevxfs" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i jffs2 /etc/modules-load.d/modules.conf) ]]; then
	echo "jffs2" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i udf /etc/modules-load.d/modules.conf) ]]; then
	echo "udf" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i cramfs /etc/modules-load.d/modules.conf) ]]; then
	echo "cramfs" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i hfs /etc/modules-load.d/modules.conf) ]]; then
	echo "hfs" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i hfsplus /etc/modules-load.d/modules.conf) ]]; then
	echo "hfsplus" >> /etc/modules-load.d/modules.conf
fi
if [[ -z $(grep -i "alias rotorar='unrar e -kb -y'" /etc/bash.bashrc) ]]; then
	echo "alias rotorar='unrar e -kb -y'" >> /etc/bash.bashrc
fi
if [[ -z $(grep -i 'export HISTIGNORE="ls:clear"' /etc/bash.bashrc) ]]; then
	echo 'export HISTIGNORE="ls:clear"' >> /etc/bash.bashrc
fi
if [[ -z $(grep -i "shopt -s checkwinsize" /etc/bash.bashrc) ]]; then
	echo "shopt -s checkwinsize" >> /etc/bash.bashrc
fi
if [[ -z $(grep -i "HISTFILESIZE=2000" /etc/bash.bashrc) ]]; then
	echo "HISTFILESIZE=2000" >> /etc/bash.bashrc
fi
if [[ -z $(grep -i "HISTSIZE=1000" /etc/bash.bashrc) ]]; then
	echo "HISTSIZE=1000" >> /etc/bash.bashrc
fi
if [[ -z $(grep -i "HISTCONTROL=ignoreboth" /etc/bash.bashrc) ]]; then
	echo "HISTCONTROL=ignoreboth" >> /etc/bash.bashrc
fi
if [[ -z $(grep -i 'INTEL_BATCH="1"' /etc/environment) ]]; then
	echo 'INTEL_BATCH="1"' >> /etc/environment
fi

if [[ -z $(grep -i 'WARNING: unauthorized access to this system is prohibited.' /etc/issue) ]]; then
	echo 'WARNING: unauthorized access to this system is prohibited.' >> /etc/issue
fi
if [[ -z $(grep -i 'WARNING: unauthorized access to this system is prohibited.' /etc/issue.net) ]]; then
	echo 'WARNING: unauthorized access to this system is prohibited.' >> /etc/issue.net
fi
if [[ -z $(grep -i '#Listen localhost:631' /etc/cups/cupsd.conf) ]]; then
	sed -i 's/Listen localhost:631/#Listen localhost:631/g' /etc/cups/cupsd.conf
	chmod 600 /etc/cups/cupsd.conf
fi
if [[ -f /etc/cups/cups-browsed.conf ]]; then
	sed -i 's/BrowseRemoteProtocols dnssd cups/BrowseRemoteProtocols none/g' /etc/cups/cups-browsed.conf
	sed -i 's/# BrowseProtocols none/BrowseProtocols none/g' /etc/cups/cups-browsed.conf
fi
if [[ -f /etc/avahi/avahi-daemon.conf ]]; then
	sed -i 's/#host-name=foo/enable-dbus=no/g' /etc/avahi/avahi-daemon.conf
fi
if [[ -f /etc/login.defs ]]; then
	sed -i 's/# SHA_CRYPT_MIN_ROUNDS 5000/SHA_CRYPT_MIN_ROUNDS 5000/g' /etc/login.defs
	sed -i 's/# SHA_CRYPT_MAX_ROUNDS 5000/SHA_CRYPT_MAX_ROUNDS 10000/g' /etc/login.defs
	sed -i 's/PASS_MAX_DAYS\t99999/PASS_MAX_DAYS\t180/g' /etc/login.defs
	sed -i 's/PASS_MIN_DAYS\t0/PASS_MIN_DAYS\t1/g' /etc/login.defs
	sed -i 's/UMASK\t\t022/UMASK\t\t027/g' /etc/login.defs
fi
if [[ -f /etc/default/keyboard ]]; then
	sed -i 's/XKBOPTIONS=""/XKBOPTIONS="terminate:ctrl_alt_bksp"/g' /etc/default/keyboard
fi
if [[ -f /etc/passwd ]]; then
	sed -i 's_/bin/bash_/usr/bin/fish_g' /etc/passwd
fi
if [[ -f /etc/rkhunter.conf ]]; then
	sed -i 's\UPDATE_MIRRORS=0\UPDATE_MIRRORS=1\g' /etc/rkhunter.conf
	sed -i 's\MIRRORS_MODE=1\MIRRORS_MODE=0\g' /etc/rkhunter.conf
	sed -i 's\WEB_CMD="/bin/false"\#WEB_CMD="/bin/false"\g' /etc/rkhunter.conf
	sed -i 's\SCRIPTWHITELIST=/usr/bin/egrep\SCRIPTWHITELIST=/bin/egrep\g' /etc/rkhunter.conf
	sed -i 's\SCRIPTWHITELIST=/usr/bin/fgrep\SCRIPTWHITELIST=/bin/fgrep\g' /etc/rkhunter.conf
fi
if [[ -f /etc/systemd/system.conf ]]; then
	sed -i 's\#DefaultTimeoutStopSec=90s\DefaultTimeoutStopSec=10s\g' /etc/systemd/system.conf
fi
mkdir -p $ss
chown -R $quien:$quien $ss
chmod -R 700 $ss
if ! [[ -d /home/$quien/.config/autostart ]]; then
	mkdir -p /home/$quien/.config/autostart
fi
yes "" | sensors-detect
echo "#!/bin/sh" > /usr/local/sbin/cgroup_clean
echo "rmdir /sys/fs/cgroup/cpu/$*" >> /usr/local/sbin/cgroup_clean
echo "# /etc/security/limits.conf" > /etc/security/limits.conf
echo "* hard core 0" >> /etc/security/limits.conf
echo "* hard nproc 1000" >> /etc/security/limits.conf
echo "* soft nofile 2000" >> /etc/security/limits.conf
echo "* hard nofile 2000" >> /etc/security/limits.conf
echo "# End of file" >> /etc/security/limits.conf
echo "net.ipv6.conf.all.disable_ipv6 = 1" > /etc/sysctl.d/60-disableipv6.conf
echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.d/60-disableipv6.conf
echo "net.ipv6.conf.lo.disable_ipv6 = 1" >> /etc/sysctl.d/60-disableipv6.conf
echo "kernel/mm/transparent_hugepage/enabled" = always > /etc/sysfs.conf
echo "kernel/mm/transparent_hugepage/khugepaged/pages_to_scan = 20000" >> /etc/sysfs.conf
echo "kernel/mm/ksm/run = 1" >> /etc/sysfs.conf
echo "kernel/mm/ksm/pages_to_scan = 20000" >> /etc/sysfs.conf
echo "kernel/mm/ksm/sleep_millisecs = 200" >> /etc/sysfs.conf
echo "fs/cgroup/cpu/notify_on_release = 1" >> /etc/sysfs.conf
echo "fs/cgroup/cpu/release_agent = /usr/local/sbin/cgroup_clean" >> /etc/sysfs.conf
#echo "devices/system/cpu/intel_pstate/no_turbo = 1" >> /etc/sysfs.conf
echo "[Journal]" > /etc/systemd/journald.conf
echo "SystemMaxUse=50M" >> /etc/systemd/journald.conf
echo "multi on" > /etc/host.conf
echo "order hosts,bind" >> /etc/host.conf
sed -i 's/GRUB_TIMEOUT_STYLE=hidden/GRUB_TIMEOUT_STYLE=menu/g' /etc/default/grub
sed -i 's/GRUB_TIMEOUT=0/GRUB_TIMEOUT=3/g' /etc/default/grub	
chmod 444 /usr/libexec/evolution-calendar-factory
chmod +x /usr/local/sbin/cgroup_clean
chmod +x /etc/init.d/mizram
chmod +x /usr/bin/kzombie
chmod +x /usr/bin/passgen-all
chmod +x /usr/bin/post-apt
chmod +x /usr/bin/clearmem
chmod +x /etc/profile.d/miulimit.sh
update-rc.d mizram defaults
wget -q -O /tmp/calc-mem https://raw.githubusercontent.com/sinfallas/calc-mem/master/calc-mem
chmod +x /tmp/calc-mem
source /tmp/calc-mem
rm -f /tmp/calc-mem
systemctl daemon-reload
systemctl enable cpupower.service
echo "America/Caracas" > /etc/timezone
dpkg-reconfigure --frontend noninteractive tzdata
update-initramfs -k all -u
update-grub2
exit 0
